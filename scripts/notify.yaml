# Status/debug notifications, these can be enabled/disabled
notify_status:
  alias: 'Debug status notification'
  sequence:
    - condition: state
      entity_id: input_boolean.notify_status
      state: 'on'
    - service: notify.pushbullet_david
      data_template:
        title: "HASS Status"
        message: "{{ message }}"

# Important notifications (notify everyone, can't be disabled)
# TODO: notify Sarah as well
notify_important:
  alias: 'Important notification'
  sequence:
    - service: notify.pushbullet_david
      data_template:
        title: "HASS Important"
        message: "{{ message }}"
    - service: notify.gcm_html5
      data_template:
        title: "HASS Important"
        message: "{{ message }}"

# Critical notifications (notify everyone, possibly repeatedly) - used for items that need immediate attention (leaking water, furance not funcitoning, etc)
# TODO: How to keep sending this every 30mins?
# TODO: notify Sarah as well
notify_cirtical:
  alias: 'Critical notification'
  sequence:
    - service: notify.pushbullet_david
      data_template:
        title: "HASS Critical - ACTION REQUIRED"
        message: "{{ message }}"
    - service: notify.gcm_html5
      data_template:
        title: "HASS Critical - ACTION REQUIRED"
        message: "{{ message }}"

# Notify david only, for things like failed logins
notify_david_only:
  alias: 'David notification'
  sequence:
    - service: notify.pushbullet_david
      data_template:
        title: "HASS notification"
        message: "{{ message }}"
    - service: notify.gcm_html5
      data_template:
        title: "HASS notification"
        message: "{{ message }}"

# TTS notification for all google home and google mini devices
notify_audio_all:
  alias: "TTS notification on all google home/mini"
  sequence:
    - service: tts.google_say
      entity_id: media_player.alert
      data_template:
        message: "{{ message }}"

# TTS notification for David's office
notify_audio_office:
  alias: "TTS notification on office google mini"
  sequence:
    - service: tts.google_say
      entity_id: media_player.office_mini
      data_template:
        message: "{{ message }}"